#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
int main()
{
	int a[] = { 1,2,3,4 };
	printf("%d\n", sizeof(a));//16
	printf("%d\n", sizeof(a+0));//4 -- 错误 -- 首元素地址，即为指针大小
	printf("%d\n", sizeof(*a));//4
	printf("%d\n", sizeof(a+1));//4 -  错误 -- 第二个元素地址
	printf("%d\n", sizeof(a[1]));//4
	printf("%d\n", sizeof(&a));//4 -- 错误 -- 取出的为地址，即指针大小为4/8
	printf("%d\n", sizeof(*&a));//16 -- 取出数组的地址并进行解引用，即计算数组的大小
	printf("%d\n", sizeof(&a+1));//4 -- 错误
	printf("%d\n", sizeof(&a[0]));//4
	printf("%d\n", sizeof(&a[0]+1));//4
	//只有sizeof（数组名）才代表整个数组的地址，如果里面有其他运算或符号，则为数组名为首元素地址
	printf("\n");

	char b[] = { 'a','b','c','d','e','f' };
	printf("%d\n", sizeof(b));//6
	printf("%d\n", sizeof(b+0));//4 -- 错误 -- 首元素地址，即为指针大小
	printf("%d\n", sizeof(*b));//1 -- b为首元素地址，*b为首元素
	printf("%d\n", sizeof(b[1]));//1
	printf("%d\n", sizeof(&b));//4
	printf("%d\n", sizeof(&b+1));//4
	printf("%d\n", sizeof(&b[0]+1));//4 -- 错误 --第二个元素的地址
	printf("\n");

	printf("%d\n", strlen(b));//随机值
	printf("%d\n", strlen(b+0));//随机值
	printf("%d\n", strlen(*b));//非法访问 -- 错误 -- *b为‘a’，ascll值为97被strlen当作非法地址
	printf("%d\n", strlen(b[1]));//非法访问
	printf("%d\n", strlen(&b));//随机值 -- 整个数组地址依然从首元素地址开始
	printf("%d\n", strlen(&b+1));//随机值 -- 与&b差值为6
	printf("%d\n", strlen(&b[0]+1));//随机值 -- 第二个元素地址，比&b少1
	//strlen为重点

	return 0;
}
