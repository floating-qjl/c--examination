#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
int main()
{
	int a[3][4] = { 0 };
	printf("%d\n", sizeof(a));//48
	printf("%d\n", sizeof(a[0][0]));//4
	printf("%d\n", sizeof(a[0]));//16  -  第一行一维数组所有元素,a[0]相当于第一行作为一维数组的数组名
	//sizeof(a[0])把数组名  单独  放在sizeof（）内，计算的是第一行大小
	printf("%d\n", sizeof(a[0]+1));//4  --  错误，a[0]并未单独存放，并不相当于第一行
	//a[0]是第一行数组名，数组名此时是首元素地址，其实就是第一行第一个元素的地址
	//所以a[0]+1就是第一行第二个元素的地址，大小是4/8
	printf("%d\n", sizeof(*(a[0]+1)));//4
	printf("%d\n", sizeof(a+1));//4
	//a为二维数组的数组名，表示首元素地址，将二维数组看作一维数组，则二维数组首元素为第一行地址
	//即 a+1 是第二行地址
	printf("%d\n", sizeof(*(a+1)));//16  --  错误  --  这里相当于a[1]，计算第二行的大小  
	printf("%d\n", sizeof(&a[0]+1));//4  --  第二行地址
	//a[0]为第一行数组名，加上&后表示整个数组的地址，再+1后表示第二行数组的地址
	printf("%d\n", sizeof(*(&a[0]+1)));//16
	printf("%d\n", sizeof(*a));//16  --  表示第一行地址，即计算第一行的大小
	printf("%d\n", sizeof(a[3]));//16
	//并不会真的访问第四行，而是当其存在
	
	return 0;
}
