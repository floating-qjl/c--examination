#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
int main()
{
	//第一题


	int a[3][2] = { (0,1),(2,3),(4,5) };
	//逗号表达式，输出结果为末位数字即 1 3 5
	int* p;
	p = a[0];
	//a[0]为第一行数组名，即首元素地址
	printf("%d", p[0]);
	//p[0] 相当于 *（p+0）
	printf("\n");


	//第二题


	int b[5][5];
	int(*pp)[4];
	//pp为数组指针，类型是int(*)[4], 而b的类型相当于int(*)[5]
	//两者类型并不相等，但可以强行赋值
	pp = b;
	//对于二维数组b，其组成为  |01|02|03|04|05| 
	//                         |06|07|08|09|10| 
	//                         |11|12|13|14|15|  
	//                         |16|17|18|19|20|  
	//                         |21|22|23|24|25|
	
	//对于pp[4][2]就相当于 *(*(p+4)+2)
	//这里的p相当于首元素地址 即指向 01 ，加上 4 后，指向了 17 （+4相当于加了4个数组的大小）
	//此时得到了 *(p+4) 并向后读取四个元素 相当于一个数组，此时又将其当作数组名
	// +2 后指向了元素 19 即第三个元素，并得到其地址
	printf("%p,%d\n", &pp[4][2] - &b[4][2],  &pp[4][2] - &b[4][2]);
	//地址相减，得到了两者之间相差的元素个数，即 -4 ，并由原码转化为补码当作地址打印
	//补码为 11111111111111111111111111111100 转化为十六进制为 FF FF FF FC
	//所以答案为       fffffffc                       -4
	return 0;
}
